{"version":3,"sources":["Projectos/Search/Componenetes/SearchBox/index.js","Projectos/Search/Componenetes/SearchResults/SearchResultsItem.js","Projectos/Search/Componenetes/SearchResults/index.js","Projectos/Search/index.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","onSearch","onClose","isSerching","useState","searchText","setSearchText","className","value","onChange","target","onClick","disabled","length","SearchResultsItem","name","email","style","backgroundColor","marginTop","marginBotton","padding","width","SearchResults","results","map","id","Search","isAtTop","setIsAtTop","data","setResults","searchTexMinus","toLowerCase","filterData","filter","includes","phone","username","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41487f58.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport './style.css'\r\n\r\n\r\nexport default function SearchBox({ onSearch, onClose, isSerching }){\r\n    const [searchText, setSearchText] = useState('');\r\n    \r\n    const hancleClick = () => {\r\n        setSearchText(\"\")\r\n        onClose()\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"search-box\">\r\n            <h3 className=\"title\">Buscador personal</h3>\r\n            <div className=\"search-box.button\">\r\n                <label>\r\n                    <input \r\n                    value={searchText} \r\n                    onChange={({target: { value }}) => setSearchText(value)}\r\n                    className=\"search-box-input\"/>\r\n                </label>\r\n                <button onClick={()=> onSearch(searchText)} /**propiedad de \r\n                html */ disabled={!searchText.length}>Buscar</button>\r\n                \r\n                {isSerching && <button onClick={hancleClick} disabled={!searchText.length}>Cerrar</button>}\r\n            </div>\r\n        </div>\r\n    );\r\n}","export default function SearchResultsItem({ name, email }){\r\n    return (\r\n      <div style={{ \r\n                backgroundColor: \"grey\", \r\n                marginTop: \"1rem\", \r\n                marginBotton: \"1rem\", \r\n                padding: 10,\r\n                width: \"100%\"}\r\n                    }>\r\n                <p>{name}</p>\r\n                <p>{email}</p>\r\n        </div>\r\n    );\r\n}","import SearchResultsItem from \"./SearchResultsItem\"\r\n\r\nexport default function SearchResults({ results, isSerching }){\r\n    return (\r\n        <div style={{ \r\n            width: \"100%\", \r\n            padding: \"0rem 2rem 0rem 2rem\"}}>\r\n            {!results?.length && isSerching && <p>No existen resultados</p>}\r\n            {results?.map((value)=> {\r\n                return (\r\n                    /**Se le puede pasar propiedades a su hijo de dos manera: una de ellas\r\n                      es con spread o método de propagación\r\n                     */\r\n                    <SearchResultsItem key={value.id} /*name={value.name} email={value.email}*/ {...value}/>\r\n                )\r\n            })\r\n        }\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from 'react'\r\nimport SearchBox from './Componenetes/SearchBox/index'\r\nimport SearchResults from './Componenetes/SearchResults/index'\r\nimport \"./style.css\"\r\n/**import data from \"../../data/users.json\"Si se usa llamada a una API No se\r\nrequiere importat */\r\n\r\n\r\nexport default function Search(){\r\n    const [isAtTop, setIsAtTop] = useState(false)\r\n    const [data, setData] = useState([{\r\n        \"id\": 1,\r\n        \"name\": \"Leanne Graham\",\r\n        \"username\": \"Bret\",\r\n        \"email\": \"Sincere@april.biz\",\r\n        \"address\": {\r\n          \"street\": \"Kulas Light\",\r\n          \"suite\": \"Apt. 556\",\r\n          \"city\": \"Gwenborough\",\r\n          \"zipcode\": \"92998-3874\",\r\n          \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n          }\r\n        },\r\n        \"phone\": \"1-770-736-8031 x56442\",\r\n        \"website\": \"hildegard.org\",\r\n        \"company\": {\r\n          \"name\": \"Romaguera-Crona\",\r\n          \"catchPhrase\": \"Multi-layered client-server neural-net\",\r\n          \"bs\": \"harness real-time e-markets\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": 2,\r\n        \"name\": \"Ervin Howell\",\r\n        \"username\": \"Antonette\",\r\n        \"email\": \"Shanna@melissa.tv\",\r\n        \"address\": {\r\n          \"street\": \"Victor Plains\",\r\n          \"suite\": \"Suite 879\",\r\n          \"city\": \"Wisokyburgh\",\r\n          \"zipcode\": \"90566-7771\",\r\n          \"geo\": {\r\n            \"lat\": \"-43.9509\",\r\n            \"lng\": \"-34.4618\"\r\n          }\r\n        },\r\n        \"phone\": \"010-692-6593 x09125\",\r\n        \"website\": \"anastasia.net\",\r\n        \"company\": {\r\n          \"name\": \"Deckow-Crist\",\r\n          \"catchPhrase\": \"Proactive didactic contingency\",\r\n          \"bs\": \"synergize scalable supply-chains\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": 3,\r\n        \"name\": \"Clementine Bauch\",\r\n        \"username\": \"Samantha\",\r\n        \"email\": \"Nathan@yesenia.net\",\r\n        \"address\": {\r\n          \"street\": \"Douglas Extension\",\r\n          \"suite\": \"Suite 847\",\r\n          \"city\": \"McKenziehaven\",\r\n          \"zipcode\": \"59590-4157\",\r\n          \"geo\": {\r\n            \"lat\": \"-68.6102\",\r\n            \"lng\": \"-47.0653\"\r\n          }\r\n        },\r\n        \"phone\": \"1-463-123-4447\",\r\n        \"website\": \"ramiro.info\",\r\n        \"company\": {\r\n          \"name\": \"Romaguera-Jacobson\",\r\n          \"catchPhrase\": \"Face to face bifurcated interface\",\r\n          \"bs\": \"e-enable strategic applications\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": 4,\r\n        \"name\": \"Patricia Lebsack\",\r\n        \"username\": \"Karianne\",\r\n        \"email\": \"Julianne.OConner@kory.org\",\r\n        \"address\": {\r\n          \"street\": \"Hoeger Mall\",\r\n          \"suite\": \"Apt. 692\",\r\n          \"city\": \"South Elvis\",\r\n          \"zipcode\": \"53919-4257\",\r\n          \"geo\": {\r\n            \"lat\": \"29.4572\",\r\n            \"lng\": \"-164.2990\"\r\n          }\r\n        }}]) /*  Solo es necesario para cuando\r\n   viene de un API*/\r\n    const[results, setResults] = useState([])\r\n/*fetch es un método de javascript que permite actualizar un componenete con\r\ninformación que viene de una base de datos. Es decir, la forma de conectar una API,\r\nalgún backend o base de datos al proyecto React*/\r\n\r\n/*\r\n    useEffect(() =>{\r\n        const getUsers = async () =>{\r\n            fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then (response => response.json())\r\n            .then (data =>{\r\n                setData(data)\r\n            })\r\n        }\r\n        getUsers().catch(null)\r\n    }, [])\r\nSe puede conectar de otra forma: \r\nuseEffect(() =>{\r\n    const getUsers = async () =>{\r\n        const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\r\n        const data = await response.json();\r\n        setData(data)\r\n        };\r\n    getUsers().catch(null)\r\n}, [])\r\n*/\r\n\r\n    const handleCloseSearch = () => {\r\n        setIsAtTop(false)\r\n        setResults([])\r\n    }\r\n    const handleSearchClick = (searchText) =>{\r\n        setIsAtTop(true)\r\n        if ( data?.length) {\r\n            const searchTexMinus = searchText.toLowerCase();\r\n            const filterData = data.filter((value) =>\r\n                    value.name.toLowerCase().includes(searchTexMinus) ||\r\n                    value.phone.toLowerCase().includes(searchTexMinus)||\r\n                    value.email.toLowerCase().includes(searchTexMinus)||\r\n                    value.username.toLowerCase().includes(searchTexMinus)\r\n                )\r\n           setResults(filterData)\r\n       }\r\n       \r\n    };\r\n    \r\n    return (\r\n        <div className={`search ${isAtTop ? 'search--top' : 'search--center'}`}>\r\n            <SearchBox \r\n            onSearch={handleSearchClick} \r\n            onClose={handleCloseSearch} \r\n            isSerching={isAtTop}/>\r\n            <SearchResults results={results} isSerching={isAtTop}/>\r\n        </div>\r\n    );\r\n}","import Search from './Projectos/Search'; \n\nconst App = () => <Search />;\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}